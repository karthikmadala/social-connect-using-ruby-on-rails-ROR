<!DOCTYPE html>

<html>

Â  <head>

Â  Â  <title><%= content_for(:title) || "Social Connect" %></title>

Â  Â  <meta name="viewport" content="width=device-width, initial-scale=1">

Â  Â  <meta name="apple-mobile-web-app-capable" content="yes">

Â  Â  <meta name="mobile-web-app-capable" content="yes">

Â  Â  <%= csrf_meta_tags %>

Â  Â  <%= csp_meta_tag %>



Â  Â  <%= yield :head %>

Â  Â  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

Â  Â  <%# <%= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

Â  Â 

Â  Â  <link rel="icon" href="/k_icon-gold.png" type="image/png">

Â  Â  <link rel="icon" href="/k_icon-gold.svg" type="image/svg+xml">

Â  Â  <link rel="apple-touch-icon" href="/k-logo-removebg-preview.png">

Â  Â 

Â  Â  <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>

Â  Â  <%= javascript_importmap_tags %>

Â  Â  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

Â  Â  <style>

Â  Â  Â  body {

Â  Â  Â  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);

Â  Â  Â  background-attachment: fixed;

Â  Â  Â  font-family: 'Poppins', sans-serif;

Â  Â  Â  }

Â  Â  </style>

Â  Â 

Â  Â  <!-- CSS for Transparency and Frosted Glass Effect -->



Â  Â  <style>

Â  Â  Â  .glass-container {

Â  Â  Â  Â  background: rgba(255, 255, 255, 0.1); /* Transparent White */

Â  Â  Â  Â  backdrop-filter: blur(15px); /* Frosted Glass Effect */

Â  Â  Â  Â  -webkit-backdrop-filter: blur(15px);

Â  Â  Â  Â  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2); /* Soft Shadow */

Â  Â  Â  Â  border-radius: 15px;

Â  Â  Â  Â  border: 1px solid rgba(255, 255, 255, 0.18);

Â  Â  Â  Â  animation: fadeIn 1s ease-in-out;

Â  Â  Â  }



Â  Â  Â  .btn-gradient {

Â  Â  Â  Â  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);

Â  Â  Â  Â  border: none;

Â  Â  Â  Â  color: white;

Â  Â  Â  Â  transition: transform 0.3s ease, box-shadow 0.3s ease;

Â  Â  Â  }



Â  Â  Â  .btn-gradient:hover {

Â  Â  Â  Â  transform: translateY(-2px);

Â  Â  Â  Â  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);

Â  Â  Â  }



Â  Â  Â  .text-white {

Â  Â  Â  Â  color: white !important;

Â  Â  Â  }



Â  Â  Â  .border-white {

Â  Â  Â  Â  border: 3px solid rgba(255, 255, 255, 0.5);

Â  Â  Â  }



Â  Â  Â  @keyframes fadeIn {

Â  Â  Â  Â  from {

Â  Â  Â  Â  Â  opacity: 0;

Â  Â  Â  Â  Â  transform: translateY(-20px);

Â  Â  Â  Â  }

Â  Â  Â  Â  to {

Â  Â  Â  Â  Â  opacity: 1;

Â  Â  Â  Â  Â  transform: translateY(0);

Â  Â  Â  Â  }

Â  Â  Â  }



Â  Â  Â  .card-title {

Â  Â  Â  Â  font-weight: 600;

Â  Â  Â  Â  color: white;

Â  Â  Â  }



Â  Â  Â  .text-muted {

Â  Â  Â  Â  color: rgba(255, 255, 255, 0.7) !important;

Â  Â  Â  }



Â  Â  Â  .badge {

Â  Â  Â  Â  font-size: 0.9rem;

Â  Â  Â  Â  padding: 0.5rem 0.75rem;

Â  Â  Â  }



Â  Â  Â  .badge.bg-success {

Â  Â  Â  Â  background: linear-gradient(135deg, #28a745 0%, #218838 100%);

Â  Â  Â  }



Â  Â  Â  .badge.bg-warning {

Â  Â  Â  Â  background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);

Â  Â  Â  }

Â  Â  </style>

Â  </head>

Â  <body>

<%# <div class="d-flex justify-content-center align-items-center vh-100" style="background: linear-gradient(225deg, #74ebd5, #ACB6E5);"> %>



Â  Â  <% if user_signed_in? %>

Â  Â  <%= render "layouts/header"%>

Â  Â  <% end %>



Â  Â  <div class="container">

Â  Â  Â  <%= render "layouts/alerts"%>

Â  Â  Â  <%= yield %>

Â  Â  </div>

<%# </div> %>



Â  Â  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

Â  </body>

</html>

<li class="list-group-item mb-3" id="post-<%= post.id %>">

Â  <div class="d-flex align-items-center justify-content-between mb-2">

Â  Â  <div class="d-flex align-items-center">

Â  Â  Â  <% if post.user.avatar.attached? %>

Â  Â  Â  Â  <%= image_tag post.user.avatar, class: "rounded-circle me-2", width: 40, height: 40 %>

Â  Â  Â  <% else %>

Â  Â  Â  Â  <%= image_tag "default_avatar.png", class: "rounded-circle me-2", width: 40, height: 40 %>

Â  Â  Â  <% end %>



Â  Â  Â  <div>

Â  Â  Â  Â  <strong><%= post.user.email %></strong><br>

Â  Â  Â  Â  <small class="text-muted"><%= time_ago_in_words(post.created_at) %> ago</small>

Â  Â  Â  </div>

Â  Â  </div>



Â  Â  <% if post.user == current_user %>

Â  Â  Â  <div>

Â  Â  Â  Â  <%# <%= link_to "Edit", edit_post_path(post), class: "btn btn-secondary btn-sm me-1", remote: true %>

Â  Â  Â  Â  <%= button_to "Delete Post", post_path(post), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger btn-sm", remote: true %>

Â  Â  Â  </div>

Â  Â  <% end %>

Â  </div>



Â  <p><%= post.content %></p>



Â  <% if post.media_files.attached? %>

Â  Â  <div class="d-flex flex-wrap gap-2">

Â  Â  Â  <% post.media_files.each do |file| %>

Â  Â  Â  Â  <% if file.content_type.start_with?('image') %>

Â  Â  Â  Â  Â  <%= image_tag file, class: "img-fluid rounded", style: "max-width: 100%; height: auto;" %>

Â  Â  Â  Â  <% elsif file.content_type.start_with?('video') %>

Â  Â  Â  Â  Â  <%= video_tag url_for(file), controls: true, autoplay: true, muted: true, loop: true, class: "img-fluid rounded", style: "max-width: 100%; height: auto;" %>

Â  Â  Â  Â  <% end %>

Â  Â  Â  <% end %>

Â  Â  </div>

Â  <% end %>



Â  <div class="mt-2">

Â  Â  <%= render 'posts/like_button', post: post %>

Â  Â  <%= link_to "ðŸ’¬ Comment", "#comment-section-#{post.id}", class: "btn btn-outline-secondary btn-sm" %>

Â  </div>



Â  <div id="comment-section-<%= post.id %>" class="mt-3">

Â  Â  <% post.comments.each do |comment| %>

Â  Â  Â  <div class="d-flex align-items-center justify-content-between mb-2">

Â  Â  Â  Â  <div class="d-flex align-items-center">

Â  Â  Â  Â  Â  <% if comment.user.avatar.attached? %>

Â  Â  Â  Â  Â  Â  <%= image_tag comment.user.avatar, class: "rounded-circle me-2", width: 30, height: 30 %>

Â  Â  Â  Â  Â  <% else %>

Â  Â  Â  Â  Â  Â  <%= image_tag "default_avatar.png", class: "rounded-circle me-2", width: 30, height: 30 %>

Â  Â  Â  Â  Â  <% end %>

Â  Â  Â  Â  Â  <strong><%= comment.user.email %>:</strong> <%= comment.content %>

Â  Â  Â  Â  </div>



Â  Â  Â  Â  <% if comment.user == current_user %>

Â  Â  Â  Â  Â  <div>

Â  Â  Â  Â  Â  Â  <%# <%= link_to "Edit", edit_post_comment_path(post, comment), class: "btn btn-secondary btn-sm me-1", remote: true %>

Â  Â  Â  Â  Â  Â  <%= button_to "Delete", post_comment_path(post, comment), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger btn-sm", remote: true %>

Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  <% end %>

Â  Â  Â  </div>

Â  Â  <% end %>



Â  Â  <%= form_with model: [post, Comment.new], local: true, remote: true do |form| %>

Â  Â  Â  <div class="d-flex mt-2">

Â  Â  Â  Â  <%= form.text_field :content, class: "form-control me-2", placeholder: "Write a comment..." %>

Â  Â  Â  Â  <%= form.submit "Post", class: "btn btn-primary btn-sm" %>

Â  Â  Â  </div>

Â  Â  <% end %>

Â  </div>

</li><%= render "posts/form"%>

<hr>

<ul class="list-group" id="posts">

Â  <% @posts.each do |post| %>

Â  Â  <%= render 'posts/post', post: post %>

Â  <% end %>

</ul>



<%= paginate @posts, remote: true %>



<script>

Â  $(window).on('scroll', function() {

Â  Â  if ($(window).scrollTop() >= $(document).height() - $(window).height() - 200) {

Â  Â  Â  $('.pagination a[rel="next"]').click();

Â  Â  }

Â  });

</script><% if current_user.liked?(post) %>

Â  <%= button_to "<i class='fas fa-thumbs-up'></i> Like (#{post.likes.count})".html_safe, post_likes_path(post_id: post.id), method: :post, remote: true, class: "btn btn-primary text-black btn-sm like-button", data: { post_id: post.id }, aria: { pressed: true } %>

<% else %>

Â  <%= button_to "<i class='far fa-thumbs-up'></i> Like (#{post.likes.count})".html_safe, post_likes_path(post_id: post.id), method: :post, remote: true, class: "btn btn-outline-primary btn-sm like-button", data: { post_id: post.id }, aria: { pressed: false } %>

<% end %>



<script>

Â  document.addEventListener('turbolinks:load', function() { // Use turbolinks load

Â  Â  let isRequestInProgress = false;



Â  Â  document.addEventListener('click', function(event) {

Â  Â  Â  if (event.target.classList.contains('like-button') && !isRequestInProgress) {

Â  Â  Â  Â  event.preventDefault();

Â  Â  Â  Â  event.stopPropagation(); // Prevent event bubbling



Â  Â  Â  Â  const button = event.target;

Â  Â  Â  Â  const postId = button.dataset.postId;

Â  Â  Â  Â  const url = button.form.action;

Â  Â  Â  Â  const isLiked = button.getAttribute('aria-pressed') === 'true';

Â  Â  Â  Â  const likeCount = parseInt(button.textContent.match(/\d+/)[0]);



Â  Â  Â  Â  // Optimistic UI update

Â  Â  Â  Â  button.setAttribute('aria-pressed', !isLiked);

Â  Â  Â  Â  button.innerHTML = `${isLiked ? '<i class="far fa-thumbs-up"></i> Like (' + (likeCount - 1) + ')' : '<i class="fas fa-thumbs-up"></i> Like (' + (likeCount + 1) + ')'}`;

Â  Â  Â  Â  button.classList.toggle('btn-primary', !isLiked);

Â  Â  Â  Â  button.classList.toggle('btn-outline-primary', isLiked);



Â  Â  Â  Â  // Animation

Â  Â  Â  Â  button.classList.add('like-button-animation');

Â  Â  Â  Â  setTimeout(() => button.classList.remove('like-button-animation'), 300);



Â  Â  Â  Â  isRequestInProgress = true;



Â  Â  Â  Â  fetch(url, {

Â  Â  Â  Â  Â  method: 'POST',

Â  Â  Â  Â  Â  headers: {

Â  Â  Â  Â  Â  Â  'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),

Â  Â  Â  Â  Â  Â  'Accept': 'text/html'

Â  Â  Â  Â  Â  }

Â  Â  Â  Â  })

Â  Â  Â  Â  .then(response => {

Â  Â  Â  Â  Â  if (!response.ok) throw new Error('Network response was not ok');

Â  Â  Â  Â  Â  return response.text();

Â  Â  Â  Â  })

Â  Â  Â  Â  .then(html => {

Â  Â  Â  Â  Â  const tempDiv = document.createElement('div');

Â  Â  Â  Â  Â  tempDiv.innerHTML = html;

Â  Â  Â  Â  Â  const newButton = tempDiv.querySelector('.like-button');

Â  Â  Â  Â  Â  button.replaceWith(newButton);

Â  Â  Â  Â  })

Â  Â  Â  Â  .catch(error => {

Â  Â  Â  Â  Â  console.error('Error:', error);

Â  Â  Â  Â  Â  // Revert UI on error

Â  Â  Â  Â  Â  button.setAttribute('aria-pressed', isLiked);

Â  Â  Â  Â  Â  button.innerHTML = `${isLiked ? '<i class="fas fa-thumbs-up"></i> Like (' + (likeCount) + ')' : '<i class="far fa-thumbs-up"></i> Like (' + (likeCount) + ')'}`;

Â  Â  Â  Â  Â  button.classList.toggle('btn-primary', isLiked);

Â  Â  Â  Â  Â  button.classList.toggle('btn-outline-primary', !isLiked);

Â  Â  Â  Â  Â  showToast('Failed to update like. Please try again.', 'error');

Â  Â  Â  Â  })

Â  Â  Â  Â  .finally(() => {

Â  Â  Â  Â  Â  isRequestInProgress = false;

Â  Â  Â  Â  });

Â  Â  Â  }

Â  Â  });



Â  Â  // Toast notification function

Â  Â  function showToast(message, type = 'error') {

Â  Â  Â  const toast = document.createElement('div');

Â  Â  Â  toast.classList.add('toast', `toast-${type}`);

Â  Â  Â  toast.innerHTML = `<i class="${type === 'error' ? 'fas fa-exclamation-triangle' : 'fas fa-check-circle'}"></i> ${message}`;

Â  Â  Â  document.body.appendChild(toast);

Â  Â  Â  setTimeout(() => {

Â  Â  Â  Â  toast.classList.add('toast-show');

Â  Â  Â  Â  setTimeout(() => {

Â  Â  Â  Â  Â  toast.classList.remove('toast-show');

Â  Â  Â  Â  Â  setTimeout(() => {

Â  Â  Â  Â  Â  Â  document.body.removeChild(toast);

Â  Â  Â  Â  Â  }, 300);

Â  Â  Â  Â  }, 3000);

Â  Â  Â  }, 10);

Â  Â  }

Â  });

</script>



<style>

Â  .like-button-animation {

Â  Â  transform: scale(1.1);

Â  Â  transition: transform 0.3s ease;

Â  }



Â  .toast {

Â  Â  position: fixed;

Â  Â  bottom: 20px;

Â  Â  left: 50%;

Â  Â  transform: translateX(-50%);

Â  Â  background-color: rgba(0, 0, 0, 0.8);

Â  Â  color: white;

Â  Â  padding: 10px 20px;

Â  Â  border-radius: 5px;

Â  Â  opacity: 0;

Â  Â  transition: opacity 0.3s ease;

Â  Â  display: flex;

Â  Â  align-items: center;

Â  Â  gap: 10px;

Â  }



Â  .toast-show {

Â  Â  opacity: 1;

Â  }



Â  .like-button {

Â  Â  transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;

Â  Â  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

Â  Â  background-image: linear-gradient(to bottom, #ffffff, #f0f0f0);

Â  }



Â  .like-button:hover{

Â  Â  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);

Â  }



Â  .like-button:active {

Â  Â  transform: scale(0.95);

Â  }



Â  .toast-error {

Â  Â  background-color: rgba(220, 53, 69, 0.8); /* Red */

Â  }



Â  .toast-success {

Â  Â  background-color: rgba(25, 135, 84, 0.8); /* Green */

Â  }



Â  .toast i {

Â  Â  font-size: 1.2em;

Â  }

</style><%= form_with model: @post, local: true do |form| %>

Â  <div class="card p-3 mb-3">

Â  Â  <div class="d-flex align-items-center mb-3">

Â  Â  Â  <% if current_user.avatar.attached? %>

Â  Â  Â  Â  <%= image_tag current_user.avatar, class: "rounded-circle me-2", width: 50, height: 50 %>

Â  Â  Â  <% else %>

Â  Â  Â  Â  <%= image_tag "default_avatar.png", class: "rounded-circle me-2", width: 50, height: 50 %>

Â  Â  Â  <% end %>

Â  Â  Â 

Â  Â  Â  <div class="w-100">

Â  Â  Â  Â  <%= form.text_area :content, class: "form-control", placeholder: "What's on your mind?", rows: 3 %>

Â  Â  Â  </div>

Â  Â  </div>



Â  Â  <div class="mb-3">

Â  Â  Â  <%= form.file_field :media_files, multiple: true, class: "form-control", id: "media-upload" %>

Â  Â  </div>



Â  Â  <!-- Preview area -->

Â  Â  <div id="media-preview" class="d-flex flex-wrap mt-2"></div>



Â  Â  <%= form.submit "Post", class: "btn btn-primary w-100 mt-3" %>

Â  </div>

<% end %>



<style>

Â  .preview-item {

Â  Â  position: relative;

Â  Â  margin-right: 10px;

Â  Â  margin-bottom: 10px;

Â  }



Â  .preview-image,

Â  .preview-video {

Â  Â  border-radius: 8px;

Â  Â  object-fit: cover;

Â  Â  width: 150px;

Â  Â  height: 150px;

Â  }



Â  #media-preview {

Â  Â  display: flex;

Â  Â  flex-wrap: wrap;

Â  Â  gap: 10px;

Â  }



Â  .card {

Â  Â  border-radius: 10px;

Â  Â  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

Â  }



Â  .form-control {

Â  Â  border-radius: 8px;

Â  Â  border: 1px solid #ddd;

Â  Â  padding: 10px;

Â  }



Â  .btn-primary {

Â  Â  background-color: #007bff;

Â  Â  border: none;

Â  Â  border-radius: 8px;

Â  Â  padding: 10px;

Â  Â  font-size: 16px;

Â  }



Â  .btn-primary:hover {

Â  Â  background-color: #0056b3;

Â  }

</style>



<script>

Â  // JavaScript to handle the preview of images and videos

Â  document.getElementById('media-upload').addEventListener('change', function(event) {

Â  Â  const previewContainer = document.getElementById('media-preview');

Â  Â  previewContainer.innerHTML = ''; // Clear previous previews



Â  Â  const files = event.target.files;



Â  Â  Array.from(files).forEach(file => {

Â  Â  Â  const reader = new FileReader();



Â  Â  Â  reader.onload = function(e) {

Â  Â  Â  Â  const fileURL = e.target.result;



Â  Â  Â  Â  // Create a preview for each file

Â  Â  Â  Â  const filePreview = document.createElement('div');

Â  Â  Â  Â  filePreview.classList.add('preview-item');



Â  Â  Â  Â  if (file.type.startsWith('image/')) {

Â  Â  Â  Â  Â  // Image preview

Â  Â  Â  Â  Â  const img = document.createElement('img');

Â  Â  Â  Â  Â  img.src = fileURL;

Â  Â  Â  Â  Â  img.classList.add('preview-image');

Â  Â  Â  Â  Â  filePreview.appendChild(img);

Â  Â  Â  Â  } else if (file.type.startsWith('video/')) {

Â  Â  Â  Â  Â  // Video preview

Â  Â  Â  Â  Â  const video = document.createElement('video');

Â  Â  Â  Â  Â  video.src = fileURL;

Â  Â  Â  Â  Â  video.classList.add('preview-video');

Â  Â  Â  Â  Â  video.controls = true;

Â  Â  Â  Â  Â  filePreview.appendChild(video);

Â  Â  Â  Â  }



Â  Â  Â  Â  previewContainer.appendChild(filePreview);

Â  Â  Â  };



Â  Â  Â  reader.readAsDataURL(file); // Read the file as a data URL

Â  Â  });

Â  });

</script>